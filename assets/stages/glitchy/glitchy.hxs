var girlTits:FNFSprite;
var missingCart:FNFSprite;
var girlTitsHitbox:FlxSprite;
var floor:FNFSprite;

var bg;
var stageFront;
var stageCurtains;

var clickedGirl:Bool = false;
var clickedCart:Bool = false;
var legacyCutscene:FNFSprite;

var joketoyou:FNFSprite;
var no:FNFSprite;

function onCreate() {
	PlayState.defaultCamZoom = 0.7;
	stage.curStage = 'glitchy';
	var bg:FNFSprite = new FNFSprite(-1400, -725).loadGraphic(Paths.image('glitch_City'));
	bg.setGraphicSize(Std.int(bg.width * 0.625));
	bg.antialiasing = true;
	bg.scrollFactor.set(0.80, 0.80);
	bg.active = false;
	add(bg);

	var tiles:FNFSprite = new FNFSprite(-1400, -725).loadGraphic(Paths.image('tiles'));
	tiles.setGraphicSize(Std.int(tiles.width * 0.625));
	tiles.antialiasing = true;
	tiles.scrollFactor.set(0.9, 0.9);
	tiles.active = false;
	add(tiles);

	var haze:FNFSprite = new FNFSprite(-1400, -725).loadGraphic(Paths.image('haze'));
	haze.setGraphicSize(Std.int(haze.width * 0.625));
	haze.antialiasing = true;
	haze.scrollFactor.set(0.9, 0.9);
	haze.active = false;
	add(haze);

	girlTits = new FNFSprite(600, 576);
	girlTits.frames = Paths.getSparrowAtlas('FUCKKKKK');
	girlTits.animation.addByPrefix('idle', 'Lmao', 24, false);
	girlTits.updateHitbox();
	girlTits.antialiasing = true;
	add(girlTits);

	missingCart = new FNFSprite(600, 576).loadGraphic(Paths.image('missingnoCart'));
	missingCart.setGraphicSize(Std.int(missingCart.width * 0.25));
	missingCart.updateHitbox();
	missingCart.antialiasing = true;
	missingCart.elasticity = 0.2;
	missingCart.solid = true;
	missingCart.immovable = false;
	missingCart.visible = false;
	add(missingCart);

	girlTitsHitbox = new FlxSprite(600, 576);
	girlTitsHitbox.makeGraphic(88, 120, FlxColor.fromRGB(255, 255, 255));
	girlTitsHitbox.visible = false;
	add(girlTitsHitbox);

	floor = new FlxSprite(127, 676);
	floor.immovable = true;
	floor.solid = true;
	floor.makeGraphic(1024, 30, FlxColor.fromRGB(255, 255, 255));
	floor.visible = false;
	add(floor);

	joketoyou = new FNFSprite();
	joketoyou.frames = Paths.getSparrowAtlas('joke_glitchyred');
	joketoyou.animation.addByPrefix('joke', 'joke', 24, false);
	joketoyou.antialiasing = true;
	joketoyou.scale.set(0.8, 0.8);
	joketoyou.alpha = 0.0001;
	add(joketoyou);

	no = new FNFSprite();
	no.frames = Paths.getSparrowAtlas('no_glitchyred');
	no.animation.addByPrefix('no', 'no', 24, false);
	no.antialiasing = true;
	no.scale.set(0.8, 0.8);
	no.alpha = 0.0001;
	add(no);
	
	legacyCutscene = new FNFSprite(500, 50);
	legacyCutscene.frames = Paths.getSparrowAtlas('they_took_everything_from_me');
	legacyCutscene.animation.addByPrefix('speech', 'GlitchySpeak', 24, false);
	legacyCutscene.updateHitbox();
	legacyCutscene.antialiasing = true;
	//legacyCutscene.visible = false;
	legacyCutscene.alpha = 0.0001;
	add(legacyCutscene);
	legacyCutscene.setGraphicSize(Std.int(legacyCutscene.width * 1.25));
}

function onUpdate(elapsed) {
	// old missingno unlock
/* 	if(girlTits.visible && !clickedGirl){
		if (FlxG.mouse.overlaps(girlTitsHitbox))
		{
			if (FlxG.mouse.justPressed)
			{
				clickedGirl=true;
				FlxTween.tween(girlTits.scale, {x: 1.3, y: 0.7}, 0.2, {
					ease: FlxEase.cubeInOut,
					onComplete: function(twn:FlxTween){
						missingCart.visible = true;
						missingCart.velocity.set(-100, -6000);
						missingCart.acceleration.set(20, 6000);
						girlTits.scale.x = 0.7;
						girlTits.scale.y = 1.3;
						FlxTween.tween(girlTits.scale, {x: 1, y: 1}, 0.75, {ease: FlxEase.cubeInOut});
					}
				});
				trace("missing no!!");
			}
		}
	}
	if(missingCart.visible && !clickedCart){
		if (FlxG.mouse.overlaps(missingCart))
		{
			if (FlxG.mouse.justPressed)
			{
				clickedCart = true;
				if(!FlxG.save.data.cartridgesOwned.contains("GlitchWeek")){
					FlxG.save.data.cartridgesOwned.push("GlitchWeek");
					FlxG.save.flush();
				}
				var cartX = missingCart.scale.x;
				var cartY = missingCart.scale.y;

				FlxTween.tween(missingCart.scale, {x: cartX*2, y: cartY*0.5}, 0.1, {
					ease: FlxEase.cubeInOut,
					onComplete: function(twn:FlxTween){
						FlxTween.tween(missingCart.scale, {x: 0, y: cartY*3}, 0.1, {
							ease: FlxEase.cubeInOut,
							onComplete: function(twn:FlxTween){
								missingCart.visible = false;
							}
						});
					}
				});
			}
		}
	}
	if(missingCart.visible){
		FlxG.collide(floor, missingCart, function(a:FlxSprite, b:FlxSprite){
			if(missingCart.velocity.x!=0)
				missingCart.velocity.x += 10;
		});
		if(missingCart.velocity.x > 0){
			missingCart.velocity.x = 0;
			missingCart.acceleration.x = 0;
		}
	} */
}


function onBeat(beat) {
	girlTits.animation.play('idle');
}

function onStep(step) {
	switch(step){
		case 234:
		PlayState.dadOpponent.visible = false;
		joketoyou.alpha = 1;
		joketoyou.animation.play("joke", false);

		case 257:
		PlayState.dadOpponent.visible = true;
		joketoyou.alpha = 0;	

		case 1084:
		PlayState.dadOpponent.visible = false;
		no.alpha = 1;
		no.animation.play("no", false);

		case 1105:
		PlayState.dadOpponent.visible = true;
		no.alpha = 0;
	}
}

function onCreatePost() {
	PlayState.instance.flipCharacters();

	PlayState.boyfriend.characterData.camOffsetX = -470;
	PlayState.boyfriend.characterData.camOffsetY = -230;
	PlayState.boyfriend.x -= 270;
	PlayState.boyfriend.y += 250;

	PlayState.dadOpponent.characterData.camOffsetX = -100;
	PlayState.dadOpponent.characterData.camOffsetY = 25;
	PlayState.dadOpponent.scale.set(0.8, 0.8);
	PlayState.dadOpponent.resizeOffsets();
	PlayState.ratingPosition.set(-300, 200);
	PlayState.instance.dadStrums.visible = false;

	legacyCutscene.cameras = [PlayState.dialogueHUD];

	//offsets :3
	joketoyou.x = PlayState.dadOpponent.x - 2;
	joketoyou.y = PlayState.dadOpponent.y - 20;
	no.x = PlayState.dadOpponent.x - 2; 
	no.y = PlayState.dadOpponent.y - 2;

	//FlxG.mouse.visible = true;
	//FlxG.mouse.useSystemCursor = true;
}

function onEvent(event) {
	switch (event){
		case 'Change Character':
			trace("changed");
			PlayState.dadOpponent.scale.set(0.8, 0.8);
			PlayState.dadOpponent.resizeOffsets();
			PlayState.instance.iconP2.changeIcon(PlayState.dadOpponent.curCharacter);
			PlayState.dadOpponent.y -= 2; //more offset
			trace(PlayState.strumHUD[1].y);

		case 'Glitchy Red Speech':
			//snaps the camrea into the correct position
			PlayState.defaultCamZoom = 1.25;
			PlayState.camGame.zoom = 1.25;
			PlayState.camGame.alpha = 0.001;
			PlayState.camHUD.visible = false;
			new FlxTimer().start(1.0, function(tmr:FlxTimer)
				{
					FlxTween.tween(PlayState.strumHUD[1], {alpha: 0.0}, 3.0, {ease: FlxEase.quadInOut});
				});

			new FlxTimer().start(0.4, function(tmr:FlxTimer)
				{
					FlxTween.tween(PlayState.camGame, {alpha: 0.5}, 1.6, {ease: FlxEase.quadInOut});
					legacyCutscene.x += 150;
					FlxTween.tween(legacyCutscene, {x: legacyCutscene.x - 150, alpha: 1.0}, 9.0, {ease: FlxEase.quadInOut});
				});

			PlayState.boyfriend.visible = false;
			PlayState.dadOpponent.visible = false;
			girlTits.visible = false;
			FlxG.mouse.visible = false;
			//legacyCutscene.visible = true;
			legacyCutscene.animation.play('speech');
			legacyCutscene.animation.finishCallback = function(name:String) 
			{
				legacyCutscene.visible = false;
				PlayState.camGame.visible = false;
				PlayState.camHUD.visible = false;
				PlayState.defaultCamZoom = 0.7;
				PlayState.camGame.zoom = 0.7;

				new FlxTimer().start(0.5, function(tmr:FlxTimer)
					{
						PlayState.camGame.zoom = 0.9;
						PlayState.camGame.alpha = 1.0;
						PlayState.camGame.visible = true;
						PlayState.camHUD.visible = true;
						PlayState.boyfriend.visible = true;
						PlayState.dadOpponent.visible = true;
						girlTits.visible = true;

						PlayState.strumHUD[1].alpha = 1.0;
					});
			}
	}
}